{"version":3,"file":"nrrdjs.js","sources":["../src/constants.js","../src/Parser.js","../src/index.js"],"sourcesContent":["/**\n * This is the mapping from the NRRD datatype as written in the NRRD header\n * to the JS typed array equivalent.\n */\nconst NRRD_TYPES_TO_TYPEDARRAY = {\n  \"signed char\": Int8Array,\n  \"int8\": Int8Array,\n  \"int8_t\": Int8Array,\n  \"uchar\": Uint8Array,\n  \"unsigned char\": Uint8Array,\n  \"uint8\": Uint8Array,\n  \"uint8_t\": Uint8Array,\n  \"short\": Int16Array,\n  \"short int\": Int16Array,\n  \"signed short\": Int16Array,\n  \"signed short int\": Int16Array,\n  \"int16\": Int16Array,\n  \"int16_t\": Int16Array,\n  \"ushort\": Uint16Array,\n  \"unsigned short\": Uint16Array,\n  \"unsigned short int\": Uint16Array,\n  \"uint16\": Uint16Array,\n  \"uint16_t\": Uint16Array,\n  \"int\": Int32Array,\n  \"signed int\": Int32Array,\n  \"int32\": Int32Array,\n  \"int32_t\": Int32Array,\n  \"uint\": Uint32Array,\n  \"unsigned int\": Uint32Array,\n  \"uint32\": Uint32Array,\n  \"uint32_t\": Uint32Array,\n  \"longlong\": BigInt64Array,           // OK for Node/V8/Chrome but not Firefox\n  \"long long\": BigInt64Array,\n  \"long long int\": BigInt64Array,\n  \"signed long long\": BigInt64Array,\n  \"signed long long int\": BigInt64Array,\n  \"int64\": BigInt64Array,\n  \"int64_t\": BigInt64Array,\n  \"ulonglong\": BigUint64Array,\n  \"unsigned long long\": BigUint64Array,\n  \"unsigned long long int\": BigUint64Array,\n  \"uint64\": BigUint64Array,\n  \"uint64_t\": BigUint64Array,\n  \"float\": Float32Array,\n  \"double\": Float64Array\n}\n\n\n\nconst NRRD_TYPES_TO_VIEW_GET = {\n  \"signed char\": 'getInt8',\n  \"int8\": 'getInt8',\n  \"int8_t\": 'getInt8',\n  \"uchar\": 'getUint8',\n  \"unsigned char\": 'getUint8',\n  \"uint8\": 'getUint8',\n  \"uint8_t\": 'getUint8',\n  \"short\": 'getInt16',\n  \"short int\": 'getInt16',\n  \"signed short\": 'getInt16',\n  \"signed short int\": 'getInt16',\n  \"int16\": 'getInt16',\n  \"int16_t\": 'getInt16',\n  \"ushort\": 'getUint16',\n  \"unsigned short\": 'getUint16',\n  \"unsigned short int\": 'getUint16',\n  \"uint16\": 'getUint16',\n  \"uint16_t\": 'getUint16',\n  \"int\": 'getInt32',\n  \"signed int\": 'getInt32',\n  \"int32\": 'getInt32',\n  \"int32_t\": 'getInt32',\n  \"uint\": 'getUint32',\n  \"unsigned int\": 'getUint32',\n  \"uint32\": 'getUint32',\n  \"uint32_t\": 'getUint32',\n  \"longlong\": null,\n  \"long long\": null,\n  \"long long int\": null,\n  \"signed long long\": null,\n  \"signed long long int\": null,\n  \"int64\": null,\n  \"int64_t\": null,\n  \"ulonglong\": null,\n  \"unsigned long long\": null,\n  \"unsigned long long int\": null,\n  \"uint64\": null,\n  \"uint64_t\": null,\n  \"float\": 'getFloat32',\n  \"double\": 'getFloat64'\n}\n\n\nexport {\n  NRRD_TYPES_TO_TYPEDARRAY,\n  NRRD_TYPES_TO_VIEW_GET\n}\n","import pako from 'pako'\nimport { NRRD_TYPES_TO_TYPEDARRAY, NRRD_TYPES_TO_VIEW_GET } from './constants'\n\n\n/**\n * Parse a buffer of a NRRD file.\n * Throws an exception if the file is not a proper NRRD file.\n * @param {ArrayBuffer} nrrdBuffer - the NRRD file buffer\n * @param {Object} options - the option object\n * @param {boolean} options.headerOnly - Parses only the header if true, parses header and data if false (default: false)\n * @return {Object} NRRD header and data such as {header: Object, data: TypedArray }\n */\nexport default function parse(nrrdBuffer, options){\n  let magicControl = 'NRRD000'\n  let magicTest = String.fromCharCode.apply(null, new Uint8Array(nrrdBuffer, 0, magicControl.length))\n\n  if(magicControl !== magicTest){\n    throw new Error('This file is not a NRRD file')\n  }\n\n  let {header, dataByteOffset} = parseHeader(nrrdBuffer)\n\n  if('headerOnly' in options && options.headerOnly ){\n    return {header: header, data: null}\n  }\n\n  let data = parseData(nrrdBuffer, header, dataByteOffset)\n  return {header: header, data: data}\n}\n\n\n/**\n * Parse the header\n */\nfunction parseHeader(nrrdBuffer){\n  let byteArrayHeader = []\n  let dataStartPosition = null\n  let view = new DataView(nrrdBuffer)\n\n  for(let i=0; i<nrrdBuffer.byteLength; i++){\n    byteArrayHeader.push(String.fromCharCode(view.getUint8(i)))\n\n    if(i>0 && byteArrayHeader[i-1] === '\\n' && byteArrayHeader[i] === '\\n'){\n      dataStartPosition = i + 1\n      break\n    }\n  }\n\n  if(dataStartPosition === null){\n    throw new Error('The NRRD header is corrupted.')\n  }\n\n  let headerLines = byteArrayHeader.join('').trim().split('\\n').map(l => l.trim())\n\n  let preMap = headerLines.slice(1)\n  .filter( s => { // removing empty lines\n    return s.length > 0\n  })\n  .filter( s => { // removing comments\n    return (s[0] !== '#')\n  })\n  .map( s => {\n    let keyVal = s.split(':')\n    return {\n      key: keyVal[0].trim(),\n      val: keyVal[1].trim()\n    }\n  })\n\n  let nrrdHeader = {}\n  preMap.forEach( field => {\n    nrrdHeader[field.key] = field.val\n  })\n\n\n  // parsing each fields of the header\n  if(nrrdHeader['sizes']){\n    nrrdHeader['sizes'] = nrrdHeader.sizes.split(' ').map( n => parseInt(n))\n  }\n\n  if(nrrdHeader['space directions']){\n    nrrdHeader['space directions'] = nrrdHeader['space directions'].split(' ')\n        .map(triple => {\n          if(triple.trim() === 'none'){\n            return null\n          }\n          return triple.slice(1, triple.length-1)\n                       .split(',')\n                       .map(n => parseFloat(n))\n        })\n  }\n\n  if(nrrdHeader['dimension']){\n    nrrdHeader['dimension'] = parseInt(nrrdHeader['dimension'])\n  }\n\n  if(nrrdHeader['space origin']){\n    nrrdHeader['space origin'] = nrrdHeader['space origin']\n        .slice(1, nrrdHeader['space origin'].length-1)\n        .split(',')\n        .map(n => parseFloat(n))\n  }\n\n  if(nrrdHeader['kinds']){\n    nrrdHeader['kinds'] = nrrdHeader['kinds'].split(' ')\n  }\n\n  if(nrrdHeader['space dimension']){\n    nrrdHeader['space dimension'] = parseInt(nrrdHeader['space dimension'])\n  }\n\n  return {\n    header: nrrdHeader,\n    dataByteOffset: dataStartPosition\n  }\n}\n\n\nfunction parseData(nrrdBuffer, header, dataByteOffset){\n  let dataBuffer = null\n\n  console.log(header)\n  console.log(dataByteOffset)\n\n  if(header.encoding === 'raw'){\n    dataBuffer = nrrdBuffer\n  } else if(header.encoding === 'gzip' || header.encoding === 'gz'){\n    dataBuffer = pako.inflate(new Uint8Array(nrrdBuffer).slice(dataByteOffset)).buffer\n  } else {\n    throw new Error('Only \"raw\" and \"gzip\" encoding are supported.')\n  }\n\n  let arrayType = NRRD_TYPES_TO_TYPEDARRAY[header.type]\n  let nbElementsFromHeader = header.sizes.reduce((prev, curr) => prev * curr)\n  let nbElementsFromBufferAndType = dataBuffer.byteLength / arrayType.BYTES_PER_ELEMENT\n\n  if(nbElementsFromHeader !== nbElementsFromBufferAndType){\n    throw new Error('Unconsistency in data buffer length')\n  }\n\n  let data = new arrayType(nbElementsFromHeader)\n  let dataView = new DataView(dataBuffer)\n  let viewMethod = NRRD_TYPES_TO_VIEW_GET[header.type]\n  let littleEndian = header.endian === 'little' ? true : false\n  let min = +Infinity\n  let max = -Infinity\n\n\n  for(let i=0; i<nbElementsFromHeader; i++){\n    data[i] = dataView[viewMethod](i * arrayType.BYTES_PER_ELEMENT, littleEndian)\n    min = Math.min(min, data[a])\n    max = Math.max(max, data[a])\n  }\n\n  console.log(data)\n  return data\n}\n\n// TODO: find a way to know the nb of componenents per voxel.\n// We could use the presence of \"none\" in the prop \"space direction\" and the prop sizes\n","import parse from './Parser'\n\nexport default ({\n  parse,\n})\n"],"names":[],"mappings":"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"}